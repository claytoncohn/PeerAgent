from pinecone import Pinecone
from upsert_data import embed
import os
from dotenv import load_dotenv
load_dotenv()

"""
Load environment variables, embed queries, and retrieve top matches from Pinecone.

This script initializes a Pinecone client using an API key from environment variables, embeds user-provided queries using the `embed` function, and then queries a Pinecone index to retrieve the top matches for each embedding.

Modules:
    pinecone (Pinecone): Used to interact with Pinecone for querying vector indexes.
    upsert_data (embed): Provides the `embed` function to generate embeddings for queries.
    os: Provides interaction with environment variables.
    dotenv (load_dotenv): Loads environment variables from a `.env` file.

Attributes:
    PINECONE_API_KEY (str): The API key used to authenticate with Pinecone.
    pc (Pinecone): An instance of the Pinecone client.
    queries (list of str): User-provided text queries that will be embedded and searched in the Pinecone index.
    embeddings (list): Embedding vectors for each of the queries.

Functions:
    get_query_result(embedding):
        Query the Pinecone index with the given embedding and retrieve the top 3 results.

        Parameters:
            embedding (list or numpy.ndarray): The embedding vector of a query.

        Returns:
            result (dict): The result of the query, including metadata of the top matches.

Usage Example:
    Provide a set of queries and use the `embed` function to generate embeddings.
    The script will query a Pinecone index using the embeddings and print the top results for each query.
"""

PINECONE_API_KEY = os.getenv(f"PINECONE_API_KEY")
pc = Pinecone(api_key=PINECONE_API_KEY)

# Good
# queries = ["What is velocity?", "I forgot the kinematic equations.", "What is the relationship between acceleration and velocity?"]

# Bad
queries = ["truck won't move?", "why is it moving backwards?", "it's not slowing down", "my dog is my best friend!"]

embeddings = embed(queries)

def get_query_result(embedding):
    """
    Query the Pinecone index with an embedding vector and retrieve the top matching results.

    Parameters
    ----------
    embedding : list or numpy.ndarray
        A vector representing the embedding of a query, generated by an embedding model.

    Returns
    -------
    result : dict
        A dictionary containing the results of the query from Pinecone, including metadata of the top matches.

    Notes
    -----
    The `namespace` and `index` are retrieved from environment variables, which must be set beforehand.
    The function queries the specified Pinecone index using the provided embedding and retrieves the top 3 results.

    Example
    -------
    embedding = [0.1, 0.2, 0.3, ...]
    result = get_query_result(embedding)
    """
    NAMESPACE = os.getenv("PINECONE_NAMESPACE")
    INDEX_NAME = os.getenv("PINECONE_INDEX")
    index = pc.Index(INDEX_NAME)
    result = index.query(
        namespace=NAMESPACE,
        vector=embedding,
        top_k=3,
        include_values=False,
        include_metadata=True
    )
    return result

for q,e in zip(queries,embeddings):
    print("Query:",q)
    print(get_query_result(e),"\n\n")